<!-- Copyright 2009 Canonical Ltd.  This software is licensed under the
     GNU Affero General Public License version 3 (see the file LICENSE).
-->

<configure
  xmlns="http://namespaces.zope.org/zope"
  xmlns:i18n="http://namespaces.zope.org/i18n"
  xmlns:webservice="http://namespaces.canonical.com/webservice"
  xmlns:lp="http://namespaces.canonical.com/lp"
  i18n_domain="launchpad">

  <include package=".browser" />

  <publisher
      name="answers"
      factory="lp.answers.publisher.answers_request_publication_factory"/>
  <utility
      component="lp.answers.publisher.AnswersLayer"
      provides="zope.publisher.interfaces.browser.IDefaultBrowserLayer"
      name="answers" />

    <subscriber
        for=".interfaces.question.IQuestion
           lazr.lifecycle.interfaces.IObjectCreatedEvent"
        handler=".notification.QuestionAddedNotification"
        />

    <subscriber
        for=".interfaces.question.IQuestion
           lazr.lifecycle.interfaces.IObjectCreatedEvent"
        handler=".notification.QuestionUnsupportedLanguageNotification"
        />

    <subscriber
        for=".interfaces.question.IQuestion
           lazr.lifecycle.interfaces.IObjectModifiedEvent"
        handler=".notification.QuestionModifiedDefaultNotification"
        />

    <subscriber
        for=".interfaces.question.IQuestion
           lazr.lifecycle.interfaces.IObjectModifiedEvent"
        handler=".notification.QuestionModifiedOwnerNotification"
        />

    <subscriber
        for=".interfaces.question.IQuestion
             lazr.lifecycle.interfaces.IObjectCreatedEvent"
        handler=".karma.question_created"
        />

    <subscriber
        for=".interfaces.question.IQuestion
             lazr.lifecycle.interfaces.IObjectModifiedEvent"
        handler=".karma.question_modified"
        />

    <subscriber
        for=".interfaces.questionmessage.IQuestionMessage
             lazr.lifecycle.interfaces.IObjectCreatedEvent"
        handler=".karma.question_comment_added"
        />

    <class class=".model.questionreopening.QuestionReopening">
        <allow
          interface=".interfaces.questionreopening.IQuestionReopening"
          />
    </class>

    <class class=".model.questionjob.QuestionEmailJob">
      <allow interface=".interfaces.questionjob.IQuestionEmailJob"/>
    </class>

    <securedutility
        component=".model.questionjob.QuestionEmailJob"
        provides=".interfaces.questionjob.IQuestionEmailJobSource">
      <allow interface=".interfaces.questionjob.IQuestionEmailJobSource"/>
    </securedutility>

    <!-- QuestionSubscription -->
    <class class=".model.questionsubscription.QuestionSubscription">
        <allow
          interface=".interfaces.questionsubscription.IQuestionSubscription"
          />
        <require
          permission="zope.Public"
          set_schema=".interfaces.questionsubscription.IQuestionSubscription"
          />
    </class>

  <class class=".model.question.Question">
    <!-- IQuestion -->
    <allow
        attributes="id title description status priority owner assignee
                    answerer answer datecreated datedue datelastquery
                    datelastresponse date_solved faq language messages
                    whiteboard product distribution sourcepackagename
                    target can_be_reopened reopenings canReject
                    can_request_info can_give_info can_give_answer
                    can_confirm_answer can_reopen
                    subscriptions isSubscribed getRecipients
                    direct_recipients indirect_recipients
                    getDirectSubscribers getIndirectSubscribers
                    getDirectSubscribersWithDetails"
      />
    <require
      permission="launchpad.Owner"
      attributes="giveInfo reopen confirmAnswer"
      />
    <require
      permission="launchpad.AnyPerson"
      attributes="requestInfo giveAnswer expireQuestion addComment
                  addCommentWithoutNotify linkFAQ subscribe unsubscribe"
      set_attributes="title description datedue target language"
      />
    <require
      permission="launchpad.Append"
      attributes="reject"
      set_attributes="assignee"
      />
    <require
      permission="launchpad.Moderate"
      attributes="setCommentVisibility"
      />
    <require
      permission="launchpad.Admin"
      attributes="setStatus"
      set_attributes="priority whiteboard"
      />
    <!-- IBugLinkTarget -->
    <allow attributes="bugs bug_links" />
    <require
      permission="launchpad.AnyPerson"
      attributes="linkBug unlinkBug"
      />
  </class>


  <class class=".model.questionmessage.QuestionMessage">
    <allow interface=".interfaces.questionmessage.IQuestionMessage"/>
  </class>

  <adapter
    for=".interfaces.question.IQuestion"
    provides=".interfaces.questiontarget.IQuestionTarget"
    factory=".adapters.question_to_questiontarget"
    />
  <adapter
    for=".interfaces.question.IQuestion"
    provides=".interfaces.faqtarget.IFAQTarget"
    factory=".adapters.question_to_faqtarget"
    />
  <adapter
    provides=".interfaces.faqtarget.IFAQTarget"
    for="lp.registry.interfaces.distributionsourcepackage.IDistributionSourcePackage"
    factory=".adapters.distrosourcepackage_to_faqtarget"
    />
  <adapter
    for="lp.registry.interfaces.distroseries.IDistroSeries"
    provides=".interfaces.questiontarget.IQuestionTarget"
    factory=".adapters.series_to_questiontarget"
    />
    <adapter
      for="lp.registry.interfaces.productseries.IProductSeries"
      provides=".interfaces.questiontarget.IQuestionTarget"
      factory=".adapters.series_to_questiontarget"
      />
  <adapter
    for="lp.soyuz.interfaces.sourcepackagerelease.ISourcePackageRelease"
    provides=".interfaces.questiontarget.IQuestionTarget"
    factory=".adapters.sourcepackagerelease_to_questiontarget"
    />
  <adapter
    for="lp.registry.interfaces.sourcepackage.ISourcePackage"
    provides=".interfaces.questiontarget.IQuestionTarget"
    factory=".adapters.sourcepackage_to_questiontarget"
    />

  <adapter
    provides=".interfaces.faqtarget.IFAQTarget"
    for="lp.registry.interfaces.sourcepackage.ISourcePackage"
    factory=".adapters.sourcepackage_to_faqtarget"
    />

  <securedutility
    name="UsesAnswersDistribution"
    component=".vocabulary.UsesAnswersDistributionVocabulary"
    provides="zope.schema.interfaces.IVocabularyFactory"
    >
    <allow interface="zope.schema.interfaces.IVocabularyFactory"/>
  </securedutility>

  <!-- QuestionSet -->
  <class class=".model.question.QuestionSet">
    <allow interface=".interfaces.questioncollection.IQuestionSet" />
  </class>

  <securedutility
    class=".model.question.QuestionSet"
    provides=".interfaces.questioncollection.IQuestionSet"
    >
    <allow interface=".interfaces.questioncollection.IQuestionSet" />
  </securedutility>


  <class class=".model.faq.FAQ">
    <!-- IFAQ-->
    <allow interface=".interfaces.faq.IFAQ" />
    <require
        permission="launchpad.Edit"
        set_attributes="title keywords content
                        last_updated_by date_last_updated"
        />
  </class>

  <adapter
    for=".interfaces.faq.IFAQ"
    provides=".interfaces.faqtarget.IFAQTarget"
    factory=".adapters.faq_to_faqtarget"
    />
  <subscriber
    for=".interfaces.faq.IFAQ
         lazr.lifecycle.interfaces.IObjectModifiedEvent"
    handler=".subscribers.update_last_updated"
    />
  <subscriber
    for=".interfaces.faq.IFAQ
         lazr.lifecycle.interfaces.IObjectCreatedEvent"
    handler=".karma.faq_created"
    />
  <subscriber
    for=".interfaces.faq.IFAQ
         lazr.lifecycle.interfaces.IObjectModifiedEvent"
    handler=".karma.faq_edited"
    />

  <!-- IFAQSet -->
  <securedutility
    class=".model.faq.FAQSet"
    provides=".interfaces.faq.IFAQSet"
    >
    <allow interface=".interfaces.faq.IFAQSet" />
  </securedutility>

  <securedutility
    name="FAQ"
    component=".vocabulary.FAQVocabulary"
    provides="zope.schema.interfaces.IVocabularyFactory"
    >
    <allow interface="zope.schema.interfaces.IVocabularyFactory"/>
  </securedutility>

  <class class=".vocabulary.FAQVocabulary">
    <allow interface="lp.services.webapp.vocabulary.IHugeVocabulary"/>
  </class>


  <lp:help-folder folder="help" name="+help-answers"/>
  <adapter
      name="answers"
      provides="lp.services.webapp.interfaces.IBreadcrumb"
      for="lp.answers.interfaces.questiontarget.IQuestionTarget"
      factory="lp.answers.browser.questiontarget.AnswersVHostBreadcrumb"
      permission="zope.Public"/>
  <adapter
      name="answers"
      provides="lp.services.webapp.interfaces.IBreadcrumb"
      for="lp.registry.interfaces.projectgroup.IProjectGroup"
      factory="lp.answers.browser.questiontarget.AnswersVHostBreadcrumb"
      permission="zope.Public"/>
  <adapter
      name="answers"
      provides="lp.services.webapp.interfaces.IBreadcrumb"
      for="lp.registry.interfaces.person.IPerson"
      factory="lp.answers.browser.questiontarget.AnswersVHostBreadcrumb"
      permission="zope.Public"/>

  <webservice:register module="lp.answers.interfaces.webservice" />
</configure>
