Projects with private-bugs-by-default
=====================================

Projects can be configured to default all new bugs to private; the bugs
will have their bug supervisor subscribed, but will otherwise be invisible
to Launchpad users in general.

Setting private-bugs-by-default
-------------------------------

If the private_bugs checkbox on a project's +admin page is checked, bugs
reported about that project will be private by default.

    >>> from zope.component import getUtility
    >>> from lp.testing import login, logout
    >>> from lp.registry.interfaces.product import IProductSet

    >>> admin_browser.open("http://launchpad.dev/redfish/+admin")
    >>> admin_browser.getControl(name="field.private_bugs").value = True
    >>> admin_browser.getControl("Change").click()

However, the product's bug supervisor must be set, and if it is not, as is
the case with Firefox, the user will get an error:

    >>> admin_browser.open("http://launchpad.dev/firefox/+admin")
    >>> admin_browser.getControl(name="field.private_bugs").value = True
    >>> admin_browser.getControl("Change").click()
    >>> admin_browser.url
    'http://launchpad.dev/firefox/+admin'
    >>> for tag in find_tags_by_class(admin_browser.contents, "message"):
    ...     print tag.renderContents()
    There is 1 error.
    <BLANKLINE>
    Set a <a href="...+bugsupervisor">bug supervisor</a> for this project first.

Filing a new bug
----------------

If we file a new bug in redfish:

    >>> user_browser.open("http://launchpad.dev/redfish/+filebug")
    >>> user_browser.getControl(name="field.title", index=0).value = "a test summary"
    >>> user_browser.getControl('Continue').click()

    >>> user_browser.getControl(name="field.comment").value = (
    ...     "a test description")
    >>> user_browser.getControl("Submit Bug Report").click()

    >>> login("foo.bar@canonical.com")

You can see it's been marked private:

    >>> redfish = getUtility(IProductSet).getByName("redfish")
    >>> redfish_bugtask = redfish.all_bugtasks[1]
    >>> redfish_bugtask.bug.private
    True

But not forced to be security-related, of course.

    >>> redfish_bugtask.bug.security_related
    False

    >>> logout()

