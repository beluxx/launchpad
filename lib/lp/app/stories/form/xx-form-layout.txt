Form layout
===========

LaunchpadFormView based forms use a tabular layout for the widgets.
In most cases, the label is shown to the left of the actual widget,
but there are some exceptions:

 * multiline text widgets have the label shown above, and take up the
   full width of the form.

 * checkbox widgets have the label shown to the right.


Normal widgets
--------------

The new team form contains an example of a normal text widget.

    >>> user_browser.open('http://launchpad.dev/people/+newteam')
    >>> content = find_main_content(user_browser.contents)
    >>> print content
    <...
    <tr>
    <td colspan="2">
    <div>
    <label for="field.name">Name:</label>
    <div>
    <input ... name="field.name" ... />
    </div>
    <p class="formHelp">....</p>
    </div>
    </td>
    </tr>
    ...

If the text field is optional, then that is noted after the widget.

    >>> print content
    <...
    <tr>
    <td colspan="2">
    <div>
    <label for="field.contactemail">Contact Email Address:</label>
    <span class="fieldRequired">(Optional)</span>
    <div>
    <input ... id="field.contactemail" ... />
    </div>
    <p class="formHelp">...</p>
    </div>
    </td>
    </tr>
    ...


Multi-line text widgets
-----------------------

A multi-line text widget is displayed with the label above it:

    >>> print content
    <...
    <tr>
      <td colspan="2" style="text-align: left">
        <div>
        <label for="field.teamdescription">Team Description:</label>
        <span ...
        <div><textarea ... name="field.teamdescription" ...></textarea></div>
        <p class="formHelp">Details about the team's work, highlights, goals,
          and how to contribute. Use plain text, paragraphs are preserved and
          URLs are linked in pages.</p>
        </div>
      </td>
    </tr>
    ...

If the multi-line text widget is optional, this is mentioned to the
right of the label:

    >>> print content
    <...
    <tr>
      <td colspan="2" style="text-align: left">
        <div>
        <label for="field.teamdescription">Team Description:</label>
        <span class="fieldRequired">(Optional)</span>
        <div><textarea ... name="field.teamdescription" ...></textarea></div>
        <p class="formHelp">Details about the team's work, highlights, goals,
          and how to contribute. Use plain text, paragraphs are preserved and
          URLs are linked in pages.</p>
        </div>
      </td>
    </tr>
    ...


Checkbox widgets
----------------

Checkboxes have their label to the right. Let's look at one example.

    >>> admin_browser.open(
    ...     'http://launchpad.dev/firefox/+review-license')
    >>> print find_tag_by_id(admin_browser.contents, 'launchpad-form-widgets')
    <...
    <tr>
      <td colspan="2">
       <div>
          <input ... name="field.project_reviewed" type="checkbox" ...  />
          <label for="field.project_reviewed">Project reviewed</label>...
      </td>
    </tr>
    ...

Rendering just the form content
-------------------------------

It may be useful in some situations to simply render the form content for a
LaunchpadFormView. For example, when displaying the form in a popup overlay
on the page. This is enabled by a special ++form++ namespace that causes
just the form content to be rendered for any URL corresponding to an
LPFormView:

    >>> admin_browser.open('http://launchpad.dev/evolution/+edit/++form++')
    >>> # Note: not the main content, but the whole page.
    >>> print admin_browser.contents
    <div...
    <table class="form" id="launchpad-form-widgets">
    ...
    </div>

Or for another example.

    >>> cprov_browser = setupBrowser(
    ...     auth='Basic celso.providelo@canonical.com:test')
    >>> cprov_browser.open(
    ...   'http://launchpad.dev/~cprov/+archive/ppa/+edit/++form++')
    >>> print cprov_browser.contents
    <div...
    <table class="form" id="launchpad-form-widgets">
    ...
    </div>

But it will not work for views that are not LPFormViews - even if they
display forms.

    >>> cprov_browser.open(
    ...     'http://launchpad.dev/~cprov/+editsshkeys/++form++')
    Traceback (most recent call last):
    ...
    NotFound...

Nor will it allow unauthorized access to data that it should not present.

    >>> browser.open(
    ...     'http://launchpad.dev/~cprov/+archive/ppa/+edit/++form++')
    Traceback (most recent call last):
    ...
    Unauthorized...
