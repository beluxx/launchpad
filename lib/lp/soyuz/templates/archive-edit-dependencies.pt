<html
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:tal="http://xml.zope.org/namespaces/tal"
  xmlns:metal="http://xml.zope.org/namespaces/metal"
  xmlns:i18n="http://xml.zope.org/namespaces/i18n"
  metal:use-macro="view/macro:page/main_only"
  i18n:domain="launchpad"
  >
<body>

<div metal:fill-slot="main">
<div class="top-portlet">
  <div metal:use-macro="context/@@launchpad_form/form">

    <div class="form" metal:fill-slot="widgets">

      <table>

        <tal:primary_dependency
          define="widget nocall:view/widgets/primary_dependencies|nothing"
          condition="widget">
          <metal:widget
            metal:use-macro="context/@@launchpad_form/widget_row" />
        </tal:primary_dependency>

        <tal:primary_components
          define="widget nocall:view/widgets/primary_components|nothing"
          condition="widget">
          <metal:widget
            metal:use-macro="context/@@launchpad_form/widget_row" />
        </tal:primary_components>

        <tr style="height: 2em;">
          <td colspan="2">&nbsp;</td>
        </tr>

        <tal:add_dependency
          define="widget nocall:view/widgets/dependency_candidate|nothing"
          condition="widget">
          <metal:widget
            metal:use-macro="context/@@launchpad_form/widget_row" />
        </tal:add_dependency>

        <tr tal:condition="not: view/has_dependencies">
          <td></td>
          <td>
            <p id="empty-dependencies"
            ><i>No dependencies recorded for this PPA yet.</i></p>
          </td>
        </tr>

        <tal:dependencies
          define="widget nocall:view/widgets/selected_dependencies|nothing"
          condition="view/has_dependencies">
          <metal:widget
            metal:use-macro="context/@@launchpad_form/widget_row" />
        </tal:dependencies>
      </table>

   </div> <!-- widgets -->

  </div> <!-- launchpad_form -->

<script type="text/javascript">
   YUI().use("node", function(Y) {

       // Highlight (setting bold font-weight) the label for the
       // selected option in a given NodesList. Assumes the input is
       // contained by the label.
       function highlight_checked (nodes) {
           nodes.each(function(input) {
               var label = Y.one(input.get("parentNode"));
               if (input.get("checked")) {
                   label.setStyle("fontWeight", "bold");
               }
               else {
                   label.setStyle("fontWeight", "normal");
               }
           });
       };

       var main_area = Y.one("#mainarea");

       // Highlight the selected radio button input on page load.
       var inputs = main_area.all("input.highlight-selected");
       highlight_checked(inputs);

       // Install signal handlers for all radio-button inputs to
       // recalculate with options should be highlighted when one of
       // them is clicked.
       inputs.on("click", function(e) {
           highlight_checked(inputs);
       }, this);

       // Install handlers to decorate selected check-box inputs when
       // they get clicked. Selected options text (next sibling) will
       // be decorated with 'line-through' style and rendered in
       // 'red'. Options not selected (or unselected) text will be
       // rendered in 'blue' and without any decoration.
       main_area.all(
           "input.line-through-when-checked").on('click', function(e) {
               var input = e.currentTarget;
               var link = input.next();
               if (input.get("checked")) {
                   link.setStyle("color", "red");
                   link.setStyle("textDecoration", "line-through");
               }
               else {
                   link.setStyle("color", "blue");
                   link.setStyle("textDecoration", "none");
               }
           });
       });
   });
</script>


</div> <!--top-portlet -->
</div> <!--main -->

</body>
</html>
