# Automatically generated by runlaunchpad.py

# Initialize sys.path so that the Mailman processes, which use the standard
# system Python instead of bin/py, can find all the necessary packages and
# modules.  Some of these are in sourcecode and some are in the virtualenv.
#
# This is a two-step process.  First, we hack sys.path in order to find a
# directory containing _pythonpath.  Then the _pythonpath module does all the
# subsequent sys.path hacking necessary.

# Set up Mailman's sys.path to pick up the top of Launchpad's tree.  This only
# gets us a sys.path
import sys
sys.path.insert(0, '%(launchpad_top)s')
import _pythonpath

# Pick up Launchpad static overrides.  This will also pick up the standard
# Mailman.Defaults.* variables.
from lp.services.mailman.monkeypatches.defaults import *

# Our dynamic overrides of all the static defaults.
SMTPHOST = '%(smtp_host)s'
SMTPPORT = %(smtp_port)d
SMTP_MAX_RCPTS = %(smtp_max_rcpts)d
SMTP_MAX_SESSIONS_PER_CONNECTION = %(smtp_max_sesions_per_connection)d

# Configuration options for the XMLRPCRunner.
XMLRPC_URL = '%(xmlrpc_url)s'
XMLRPC_SLEEPTIME = %(xmlrpc_sleeptime)s
XMLRPC_TIMEOUT = %(xmlrpc_timeout)s
XMLRPC_SUBSCRIPTION_BATCH_SIZE = %(xmlrpc_subscription_batch_size)s
LAUNCHPAD_SHARED_SECRET = '%(shared_secret)s'

# RFC 2369 header information.
LIST_HELP_HEADER = '%(list_help_header)s'
LIST_SUBSCRIPTION_HEADERS = '%(list_subscription_headers)s'
LIST_ARCHIVE_HEADER_TEMPLATE = '%(archive_url_template)s'
LIST_OWNER_HEADER_TEMPLATE = '%(list_owner_header_template)s'

# Soft and hard maximum message size limits.  Anything below the soft limit is
# allowed directly through.  Between the soft and hard limits, the message is
# held for approval.  Above the hard limit, the message is logged and
# discarded.  Note that the normal Mailman size thresholds are ignored.
LAUNCHPAD_SOFT_MAX_SIZE = %(soft_max_size)d
LAUNCHPAD_HARD_MAX_SIZE = %(hard_max_size)d

SITE_LIST_OWNER = '%(site_list_owner)s'

DEFAULT_MSG_FOOTER = '''-- 
%(footer)s'''

# Set up MHonArc archiving.
PUBLIC_EXTERNAL_ARCHIVER = '/usr/bin/mhonarc \
-add \
-dbfile %(var_dir)s/archives/private/%%(listname)s.mbox/mhonarc.db \
-outdir %(var_dir)s/mhonarc/%%(listname)s \
-definevar ML-NAME=%%(listname)s \
-rcfile %(var_dir)s/data/lp-mhonarc-common.mrc \
-stderr %(var_dir)s/logs/mhonarc \
-stdout %(var_dir)s/logs/mhonarc \
-spammode \
-umask 022'
PRIVATE_EXTERNAL_ARCHIVER = PUBLIC_EXTERNAL_ARCHIVER

# How often do we run the bounce processor?  For production, the default 15
# minutes is fine, for testing we want to run it more often.
REGISTER_BOUNCES_EVERY = %(register_bounces_every)d
